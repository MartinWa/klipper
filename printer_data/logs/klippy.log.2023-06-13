===== Config file =====
[virtual_sdcard]
path = ~/printer_data/gcodes
on_error_gcode = CANCEL_PRINT

[pause_resume]

[display_status]

[gcode_macro CANCEL_PRINT]
description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
gcode = 
	
	{% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
	{% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
	{% set allow_park = False if not macro_found
	else False if client.park_at_cancel is not defined
	else True  if client.park_at_cancel|lower == 'true'
	else False %}
	{% set retract = 5.0  if not macro_found else client.cancel_retract|default(5.0)|abs %}
	
	{% set park_x = ""                                    if not macro_found
	else ""                                    if client.park_at_cancel_x is not defined
	else "X=" + client.park_at_cancel_x|string if client.park_at_cancel_x is not none %}
	{% set park_y = ""                                    if not macro_found
	else ""                                    if client.park_at_cancel_y is not defined
	else "Y=" + client.park_at_cancel_y|string if client.park_at_cancel_y is not none %}
	{% set custom_park = True if (park_x|length > 0 or park_y|length > 0) else False %}
	
	{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
	_CLIENT_RETRACT LENGTH={retract}
	TURN_OFF_HEATERS
	M106 S0
	
	SET_PAUSE_NEXT_LAYER ENABLE=0
	SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
	CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description = Pause the actual running print
rename_existing = PAUSE_BASE
gcode = 
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{printer[printer.toolhead.extruder].target}"
	
	PAUSE_BASE
	_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

[gcode_macro RESUME]
description = Resume the actual running print
rename_existing = RESUME_BASE
variable_last_extruder_temp = 0
gcode = 
	
	{% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
	{% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set sp_move        = velocity if not macro_found else client.speed_move|default(velocity) %}
	
	M109 S{last_extruder_temp}
	
	_CLIENT_EXTRUDE
	RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}

[gcode_macro SET_PAUSE_NEXT_LAYER]
description = Enable a pause if the next layer is reached
gcode = 
	{% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
	{% set ENABLE = params.ENABLE | default(1) | int != 0 %}
	{% set MACRO = params.MACRO | default(pause_next_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

[gcode_macro SET_PAUSE_AT_LAYER]
description = Enable/disable a pause if a given layer number is reached
gcode = 
	{% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
	{% set ENABLE = params.ENABLE | int != 0 if params.ENABLE is defined
	else params.LAYER is defined %}
	{% set LAYER = params.LAYER | default(pause_at_layer.layer) | int %}
	{% set MACRO = params.MACRO | default(pause_at_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

[gcode_macro SET_PRINT_STATS_INFO]
rename_existing = SET_PRINT_STATS_INFO_BASE
description = Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer = { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer = { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode = 
	{% if pause_next_layer.enable %}
	{action_respond_info("%s, forced by pause_next_layer" % pause_next_layer.call)}
	{pause_next_layer.call}
	SET_PAUSE_NEXT_LAYER ENABLE=0
	{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
	{action_respond_info("%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer))}
	{pause_at_layer.call}
	SET_PAUSE_AT_LAYER ENABLE=0
	{% endif %}
	SET_PRINT_STATS_INFO_BASE {rawparams}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode = 
	
	{% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
	{% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set use_custom     = False if not macro_found
	else False if client.use_custom_pos is not defined
	else True  if client.use_custom_pos|lower == 'true'
	else False %}
	{% set custom_park_x  = 0.0 if not macro_found else client.custom_park_x|default(0.0) %}
	{% set custom_park_y  = 0.0 if not macro_found else client.custom_park_y|default(0.0) %}
	{% set park_dz        = 2.0 if not macro_found else client.custom_park_dz|default(2.0)|abs %}
	{% set sp_hop         = 900  if not macro_found else client.speed_hop|default(15) * 60 %}
	{% set sp_move        = velocity * 60 if not macro_found else client.speed_move|default(velocity) * 60 %}
	
	{% set origin    = printer.gcode_move.homing_origin %}
	{% set act       = printer.gcode_move.gcode_position %}
	{% set max       = printer.toolhead.axis_maximum %}
	{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	
	{% set z_min = params.Z_MIN|default(0)|float %}
	{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}
	{% set x_park = params.X       if params.X is defined
	else custom_park_x  if use_custom
	else 0.0            if round_bed
	else (max.x - 5.0) %}
	{% set y_park = params.Y       if params.Y is defined
	else custom_park_y  if use_custom
	else (max.y - 5.0)  if round_bed and z_park < cone
	else 0.0            if round_bed
	else (max.y - 5.0) %}
	
	_CLIENT_RETRACT
	{% if "xyz" in printer.toolhead.homed_axes %}
	G90
	G1 Z{z_park} F{sp_hop}
	G1 X{x_park} Y{y_park} F{sp_move}
	{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro _CLIENT_EXTRUDE]
description = Extrudes, if the extruder is hot enough
gcode = 
	{% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
	{% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
	{% set use_fw_retract = False if not macro_found
	else False if client.use_fw_retract is not defined
	else True  if client.use_fw_retract|lower == 'true' and printer.firmware_retraction is defined
	else False %}
	
	{% set length = (params.LENGTH|float) if params.LENGTH is defined
	else 1.0 if not macro_found
	else client.unretract|default(1.0) %}
	
	{% set speed = params.SPEED if params.SPEED is defined
	else 35 if not macro_found
	else client.speed_unretract|default(35) %}
	
	{% set absolute_extrude = printer.gcode_move.absolute_extrude %}
	
	{% if printer.extruder.can_extrude %}
	{% if use_fw_retract %}
	{% if length < 0 %}
	G10
	{% else %}
	G11
	{% endif %}
	{% else %}
	M83
	G1 E{length} F{(speed|float|abs) * 60}
	{% if absolute_extrude %}
	M82
	{% endif %}
	{% endif %}
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}

[gcode_macro _CLIENT_RETRACT]
description = Retracts, if the extruder is hot enough
gcode = 
	{% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
	{% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
	
	{% set length = (params.LENGTH|float) if params.LENGTH is defined
	else 1.0 if not macro_found
	else client.retract|default(1.0) %}
	
	{% set speed = params.SPEED if params.SPEED is defined
	else 35 if not macro_found
	else client.speed_retract|default(35) %}
	
	_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}

[gcode_macro START_PRINT]
gcode = 
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(210)|float %}
	
	
	M104 S{EXTRUDER_TEMP}
	
	M140 S{BED_TEMP}
	
	G90
	
	SET_GCODE_OFFSET Z=0.0
	
	G28
	
	BED_MESH_PROFILE LOAD=default
	
	G1 Z5 F3000
	
	G1 Z0.15 F300
	
	M190 S{BED_TEMP}
	
	M109 S{EXTRUDER_TEMP}

[gcode_macro END_PRINT]
gcode = 
	
	M140 S0
	M104 S0
	M106 S0
	
	G91
	G1 X-2 Y-2 E-3 F300
	
	G1 Z10 F3000
	G90
	
	M84

[stepper_x]
step_pin = PC2
dir_pin = PB9
enable_pin = !PC3
microsteps = 16
rotation_distance = 40
endstop_pin = ^PA5
position_endstop = -4
position_max = 260
position_min = -4
homing_speed = 50

[stepper_y]
step_pin = PB8
dir_pin = PB7
enable_pin = !PC3
microsteps = 16
rotation_distance = 40
endstop_pin = ^PA6
position_endstop = -6
position_max = 224
position_min = -6
homing_speed = 50

[stepper_z]
step_pin = PB6
dir_pin = !PB5
enable_pin = !PC3
microsteps = 16
rotation_distance = 8
endstop_pin = probe:z_virtual_endstop
position_max = 250
position_min = -0.1

[bltouch]
sensor_pin = ^PB1
control_pin = PB0
pin_up_touch_mode_reports_triggered = False
probe_with_touch_mode = True
x_offset = -47
y_offset = -8
z_offset = 2.850

[safe_z_home]
home_xy_position = 117.5,117.5
z_hop = 10
z_hop_speed = 5

[screws_tilt_adjust]
screw1 = 77,38
screw1_name = front left screw
screw2 = 247, 38
screw2_name = front right screw
screw3 = 247, 207
screw3_name = rear right screw
screw4 = 77,207
screw4_name = rear left screw
horizontal_move_z = 10
speed = 50
screw_thread = CW-M4

[bed_mesh]
speed = 120
horizontal_move_z = 5
mesh_min = 10, 15
mesh_max = 213, 216
probe_count = 5,5
algorithm = bicubic
fade_start = 1
fade_end = 10
fade_target = 0

[extruder]
step_pin = PB4
dir_pin = PB3
enable_pin = !PC3
microsteps = 16
rotation_distance = 23.15
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = PA1
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC5
control = pid
pid_kp = 25.883
pid_ki = 1.380
pid_kd = 121.326
min_temp = 0
max_temp = 250

[heater_bed]
heater_pin = PA2
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC4
control = pid
pid_kp = 68.240
pid_ki = 1.730
pid_kd = 673.022
min_temp = 0
max_temp = 130

[fan]
pin = PA0

[mcu]
serial = /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method = command

[printer]
kinematics = cartesian
max_velocity = 300
max_accel = 3000
max_z_velocity = 5
max_z_accel = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[adxl345]
cs_pin = rpi:None

[resonance_tester]
accel_chip = adxl345
probe_points = 
	100, 100, 20

[input_shaper]
shaper_type_y = mzv
shaper_freq_y = 46.2
shaper_type_x = mzv
shaper_freq_x = 59.6

[bed_mesh default]
version = 1
points = 
	-0.282500, -0.285000, -0.232500, -0.262500, -0.190000
	-0.027500, -0.047500, -0.005000, -0.035000, -0.040000
	0.030000, 0.007500, 0.060000, -0.015000, -0.047500
	-0.057500, -0.042500, -0.040000, -0.077500, -0.087500
	-0.235000, -0.270000, -0.215000, -0.235000, -0.185000
x_count = 5
y_count = 5
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 10.0
max_x = 213.0
min_y = 15.0
max_y = 216.0
=======================
Loaded MCU 'mcu' 105 commands (v0.11.0-169-g83308a10 / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.34-4+rpi1+14) 2.34)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PB8,PB9 BUS_PINS_i2c2=PB10,PB11 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi3=PB4,PB5,PB3 CLOCK_FREQ=72000000 MCU=stm32f103xe PWM_MAX=255 RECEIVE_WINDOW=192 RESERVE_PINS_serial=PA10,PA9 SERIAL_BAUD=250000 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
Configured MCU 'mcu' (1024 moves)
Loaded MCU 'rpi' 111 commands (v0.11.0-218-gb389c70d / gcc: (Raspbian 10.2.1-6+rpi1) 10.2.1 20210110 binutils: (GNU Binutils for Raspbian) 2.35.2)
MCU 'rpi' config: ADC_MAX=4095 CLOCK_FREQ=50000000 MCU=linux PCA9685_MAX=4096 PWM_MAX=32768 STATS_SUMSQ_BASE=256
Configured MCU 'rpi' (1024 moves)
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-l', '/home/pi/printer_data/logs/klippy.log', '-I', '/home/pi/printer_data/comms/klippy.serial', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.11.0-219-g645a1b83'
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ARMv7 Processor rev 4 (v7l)
Python: '3.9.2 (default, Mar 12 2021, 04:06:34) \n[GCC 10.2.1 20210110]'
=============== Log rollover at Wed Jun 14 00:09:44 2023 ===============
webhooks client 1970761680: Disconnected
Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-l', '/home/pi/printer_data/logs/klippy.log', '-I', '/home/pi/printer_data/comms/klippy.serial', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.11.0-219-g645a1b83'
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ARMv7 Processor rev 4 (v7l)
Python: '3.9.2 (default, Mar 12 2021, 04:06:34) \n[GCC 10.2.1 20210110]'
Start printer at Wed Jun 14 00:10:11 2023 (1686694211.5 31.6)
===== Config file =====
[virtual_sdcard]
path = ~/printer_data/gcodes
on_error_gcode = CANCEL_PRINT

[pause_resume]

[display_status]

[gcode_macro CANCEL_PRINT]
description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
gcode = 
	
	{% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
	{% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
	{% set allow_park = False if not macro_found
	else False if client.park_at_cancel is not defined
	else True  if client.park_at_cancel|lower == 'true'
	else False %}
	{% set retract = 5.0  if not macro_found else client.cancel_retract|default(5.0)|abs %}
	
	{% set park_x = ""                                    if not macro_found
	else ""                                    if client.park_at_cancel_x is not defined
	else "X=" + client.park_at_cancel_x|string if client.park_at_cancel_x is not none %}
	{% set park_y = ""                                    if not macro_found
	else ""                                    if client.park_at_cancel_y is not defined
	else "Y=" + client.park_at_cancel_y|string if client.park_at_cancel_y is not none %}
	{% set custom_park = True if (park_x|length > 0 or park_y|length > 0) else False %}
	
	{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
	_CLIENT_RETRACT LENGTH={retract}
	TURN_OFF_HEATERS
	M106 S0
	
	SET_PAUSE_NEXT_LAYER ENABLE=0
	SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
	CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description = Pause the actual running print
rename_existing = PAUSE_BASE
gcode = 
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{printer[printer.toolhead.extruder].target}"
	
	PAUSE_BASE
	_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

[gcode_macro RESUME]
description = Resume the actual running print
rename_existing = RESUME_BASE
variable_last_extruder_temp = 0
gcode = 
	
	{% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
	{% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set sp_move        = velocity if not macro_found else client.speed_move|default(velocity) %}
	
	M109 S{last_extruder_temp}
	
	_CLIENT_EXTRUDE
	RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}

[gcode_macro SET_PAUSE_NEXT_LAYER]
description = Enable a pause if the next layer is reached
gcode = 
	{% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
	{% set ENABLE = params.ENABLE | default(1) | int != 0 %}
	{% set MACRO = params.MACRO | default(pause_next_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

[gcode_macro SET_PAUSE_AT_LAYER]
description = Enable/disable a pause if a given layer number is reached
gcode = 
	{% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
	{% set ENABLE = params.ENABLE | int != 0 if params.ENABLE is defined
	else params.LAYER is defined %}
	{% set LAYER = params.LAYER | default(pause_at_layer.layer) | int %}
	{% set MACRO = params.MACRO | default(pause_at_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

[gcode_macro SET_PRINT_STATS_INFO]
rename_existing = SET_PRINT_STATS_INFO_BASE
description = Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer = { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer = { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode = 
	{% if pause_next_layer.enable %}
	{action_respond_info("%s, forced by pause_next_layer" % pause_next_layer.call)}
	{pause_next_layer.call}
	SET_PAUSE_NEXT_LAYER ENABLE=0
	{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
	{action_respond_info("%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer))}
	{pause_at_layer.call}
	SET_PAUSE_AT_LAYER ENABLE=0
	{% endif %}
	SET_PRINT_STATS_INFO_BASE {rawparams}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode = 
	
	{% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
	{% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set use_custom     = False if not macro_found
	else False if client.use_custom_pos is not defined
	else True  if client.use_custom_pos|lower == 'true'
	else False %}
	{% set custom_park_x  = 0.0 if not macro_found else client.custom_park_x|default(0.0) %}
	{% set custom_park_y  = 0.0 if not macro_found else client.custom_park_y|default(0.0) %}
	{% set park_dz        = 2.0 if not macro_found else client.custom_park_dz|default(2.0)|abs %}
	{% set sp_hop         = 900  if not macro_found else client.speed_hop|default(15) * 60 %}
	{% set sp_move        = velocity * 60 if not macro_found else client.speed_move|default(velocity) * 60 %}
	
	{% set origin    = printer.gcode_move.homing_origin %}
	{% set act       = printer.gcode_move.gcode_position %}
	{% set max       = printer.toolhead.axis_maximum %}
	{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	
	{% set z_min = params.Z_MIN|default(0)|float %}
	{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}
	{% set x_park = params.X       if params.X is defined
	else custom_park_x  if use_custom
	else 0.0            if round_bed
	else (max.x - 5.0) %}
	{% set y_park = params.Y       if params.Y is defined
	else custom_park_y  if use_custom
	else (max.y - 5.0)  if round_bed and z_park < cone
	else 0.0            if round_bed
	else (max.y - 5.0) %}
	
	_CLIENT_RETRACT
	{% if "xyz" in printer.toolhead.homed_axes %}
	G90
	G1 Z{z_park} F{sp_hop}
	G1 X{x_park} Y{y_park} F{sp_move}
	{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro _CLIENT_EXTRUDE]
description = Extrudes, if the extruder is hot enough
gcode = 
	{% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
	{% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
	{% set use_fw_retract = False if not macro_found
	else False if client.use_fw_retract is not defined
	else True  if client.use_fw_retract|lower == 'true' and printer.firmware_retraction is defined
	else False %}
	
	{% set length = (params.LENGTH|float) if params.LENGTH is defined
	else 1.0 if not macro_found
	else client.unretract|default(1.0) %}
	
	{% set speed = params.SPEED if params.SPEED is defined
	else 35 if not macro_found
	else client.speed_unretract|default(35) %}
	
	{% set absolute_extrude = printer.gcode_move.absolute_extrude %}
	
	{% if printer.extruder.can_extrude %}
	{% if use_fw_retract %}
	{% if length < 0 %}
	G10
	{% else %}
	G11
	{% endif %}
	{% else %}
	M83
	G1 E{length} F{(speed|float|abs) * 60}
	{% if absolute_extrude %}
	M82
	{% endif %}
	{% endif %}
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}

[gcode_macro _CLIENT_RETRACT]
description = Retracts, if the extruder is hot enough
gcode = 
	{% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
	{% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
	
	{% set length = (params.LENGTH|float) if params.LENGTH is defined
	else 1.0 if not macro_found
	else client.retract|default(1.0) %}
	
	{% set speed = params.SPEED if params.SPEED is defined
	else 35 if not macro_found
	else client.speed_retract|default(35) %}
	
	_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}

[gcode_macro START_PRINT]
gcode = 
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(210)|float %}
	
	
	M104 S{EXTRUDER_TEMP}
	
	M140 S{BED_TEMP}
	
	G90
	
	SET_GCODE_OFFSET Z=0.0
	
	G28
	
	BED_MESH_PROFILE LOAD=default
	
	G1 Z5 F3000
	
	G1 Z0.15 F300
	
	M190 S{BED_TEMP}
	
	M109 S{EXTRUDER_TEMP}

[gcode_macro END_PRINT]
gcode = 
	
	M140 S0
	M104 S0
	M106 S0
	
	G91
	G1 X-2 Y-2 E-3 F300
	
	G1 Z10 F3000
	G90
	
	M84

[stepper_x]
step_pin = PC2
dir_pin = PB9
enable_pin = !PC3
microsteps = 16
rotation_distance = 40
endstop_pin = ^PA5
position_endstop = -4
position_max = 260
position_min = -4
homing_speed = 50

[stepper_y]
step_pin = PB8
dir_pin = PB7
enable_pin = !PC3
microsteps = 16
rotation_distance = 40
endstop_pin = ^PA6
position_endstop = -6
position_max = 224
position_min = -6
homing_speed = 50

[stepper_z]
step_pin = PB6
dir_pin = !PB5
enable_pin = !PC3
microsteps = 16
rotation_distance = 8
endstop_pin = probe:z_virtual_endstop
position_max = 250
position_min = -0.1

[bltouch]
sensor_pin = ^PB1
control_pin = PB0
pin_up_touch_mode_reports_triggered = False
probe_with_touch_mode = True
x_offset = -47
y_offset = -8
z_offset = 2.850

[safe_z_home]
home_xy_position = 117.5,117.5
z_hop = 10
z_hop_speed = 5

[screws_tilt_adjust]
screw1 = 77,38
screw1_name = front left screw
screw2 = 247, 38
screw2_name = front right screw
screw3 = 247, 207
screw3_name = rear right screw
screw4 = 77,207
screw4_name = rear left screw
horizontal_move_z = 10
speed = 50
screw_thread = CW-M4

[bed_mesh]
speed = 120
horizontal_move_z = 5
mesh_min = 10, 15
mesh_max = 213, 216
probe_count = 5,5
algorithm = bicubic
fade_start = 1
fade_end = 10
fade_target = 0

[extruder]
step_pin = PB4
dir_pin = PB3
enable_pin = !PC3
microsteps = 16
rotation_distance = 23.15
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = PA1
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC5
control = pid
pid_kp = 25.883
pid_ki = 1.380
pid_kd = 121.326
min_temp = 0
max_temp = 250

[heater_bed]
heater_pin = PA2
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC4
control = pid
pid_kp = 68.240
pid_ki = 1.730
pid_kd = 673.022
min_temp = 0
max_temp = 130

[fan]
pin = PA0

[mcu]
serial = /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method = command

[printer]
kinematics = cartesian
max_velocity = 300
max_accel = 3000
max_z_velocity = 5
max_z_accel = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[adxl345]
cs_pin = rpi:None

[resonance_tester]
accel_chip = adxl345
probe_points = 
	100, 100, 20

[input_shaper]
shaper_type_y = mzv
shaper_freq_y = 46.2
shaper_type_x = mzv
shaper_freq_x = 59.6

[bed_mesh default]
version = 1
points = 
	-0.282500, -0.285000, -0.232500, -0.262500, -0.190000
	-0.027500, -0.047500, -0.005000, -0.035000, -0.040000
	0.030000, 0.007500, 0.060000, -0.015000, -0.047500
	-0.057500, -0.042500, -0.040000, -0.077500, -0.087500
	-0.235000, -0.270000, -0.215000, -0.235000, -0.185000
x_count = 5
y_count = 5
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 10.0
max_x = 213.0
min_y = 15.0
max_y = 216.0
=======================
Extruder max_extrude_ratio=0.266081
mcu 'mcu': Starting serial connect
mcu 'mcu': got {'oid': 11, 'next_clock': 3948501120, 'value': 31653, '#name': 'analog_in_state', '#sent_time': 33.431775820999995, '#receive_time': 33.485041915000004}
mcu 'mcu': got {'oid': 15, 'next_clock': 3951381120, 'value': 31643, '#name': 'analog_in_state', '#sent_time': 33.487310977, '#receive_time': 33.525156133}
mcu 'mcu': got {'oid': 11, 'next_clock': 3970101120, 'value': 31658, '#name': 'analog_in_state', '#sent_time': 33.758896862, '#receive_time': 33.785077487}
Loaded MCU 'mcu' 105 commands (v0.11.0-169-g83308a10 / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.34-4+rpi1+14) 2.34)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PB8,PB9 BUS_PINS_i2c2=PB10,PB11 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi3=PB4,PB5,PB3 CLOCK_FREQ=72000000 MCU=stm32f103xe PWM_MAX=255 RECEIVE_WINDOW=192 RESERVE_PINS_serial=PA10,PA9 SERIAL_BAUD=250000 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
mcu 'rpi': Starting connect
mcu 'mcu': got {'oid': 15, 'next_clock': 3972981120, 'value': 31646, '#name': 'analog_in_state', '#sent_time': 33.820942486999996, '#receive_time': 33.8251203}
mcu 'mcu': got {'oid': 11, 'next_clock': 3991701120, 'value': 31660, '#name': 'analog_in_state', '#sent_time': 33.820942486999996, '#receive_time': 34.085159935}
mcu 'mcu': got {'oid': 15, 'next_clock': 3994581120, 'value': 31644, '#name': 'analog_in_state', '#sent_time': 33.820942486999996, '#receive_time': 34.125032071}
mcu 'mcu': got {'oid': 11, 'next_clock': 4013301120, 'value': 31660, '#name': 'analog_in_state', '#sent_time': 33.820942486999996, '#receive_time': 34.385192748}
Loaded MCU 'rpi' 111 commands (v0.11.0-218-gb389c70d / gcc: (Raspbian 10.2.1-6+rpi1) 10.2.1 20210110 binutils: (GNU Binutils for Raspbian) 2.35.2)
MCU 'rpi' config: ADC_MAX=4095 CLOCK_FREQ=50000000 MCU=linux PCA9685_MAX=4096 PWM_MAX=32768 STATS_SUMSQ_BASE=256
Configured MCU 'mcu' (1024 moves)
Sending MCU 'rpi' printer configuration...
Configured MCU 'rpi' (1024 moves)
bed_mesh: generated points
Index |  Tool Adjusted  |   Probe
  0   | (57.0, 23.0)    | (10.0, 15.0)
  1   | (107.8, 23.0)   | (60.8, 15.0)
  2   | (158.5, 23.0)   | (111.5, 15.0)
  3   | (209.2, 23.0)   | (162.2, 15.0)
  4   | (260.0, 23.0)   | (213.0, 15.0)
  5   | (260.0, 73.2)   | (213.0, 65.2)
  6   | (209.2, 73.2)   | (162.2, 65.2)
  7   | (158.5, 73.2)   | (111.5, 65.2)
  8   | (107.8, 73.2)   | (60.8, 65.2)
  9   | (57.0, 73.2)    | (10.0, 65.2)
  10  | (57.0, 123.5)   | (10.0, 115.5)
  11  | (107.8, 123.5)  | (60.8, 115.5)
  12  | (158.5, 123.5)  | (111.5, 115.5)
  13  | (209.2, 123.5)  | (162.2, 115.5)
  14  | (260.0, 123.5)  | (213.0, 115.5)
  15  | (260.0, 173.8)  | (213.0, 165.8)
  16  | (209.2, 173.8)  | (162.2, 165.8)
  17  | (158.5, 173.8)  | (111.5, 165.8)
  18  | (107.8, 173.8)  | (60.8, 165.8)
  19  | (57.0, 173.8)   | (10.0, 165.8)
  20  | (57.0, 224.0)   | (10.0, 216.0)
  21  | (107.8, 224.0)  | (60.8, 216.0)
  22  | (158.5, 224.0)  | (111.5, 216.0)
  23  | (209.2, 224.0)  | (162.2, 216.0)
  24  | (260.0, 224.0)  | (213.0, 216.0)
Starting heater checks for heater_bed
webhooks client 1947389544: New connection
Starting heater checks for extruder
webhooks client 1947389544: Client info {'program': 'Moonraker', 'version': 'v0.8.0-48-gaa0f89c'}
webhooks: registering remote method 'shutdown_machine' for connection id: 1947389544
webhooks: registering remote method 'reboot_machine' for connection id: 1947389544
webhooks: registering remote method 'pause_job_queue' for connection id: 1947389544
webhooks: registering remote method 'start_job_queue' for connection id: 1947389544
Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/printer_data/config/printer.cfg', '-l', '/home/pi/printer_data/logs/klippy.log', '-I', '/home/pi/printer_data/comms/klippy.serial', '-a', '/home/pi/printer_data/comms/klippy.sock']
Git version: 'v0.11.0-219-g645a1b83'
Branch: master
Remote: origin
Tracked URL: https://github.com/Klipper3d/klipper.git
CPU: 4 core ARMv7 Processor rev 4 (v7l)
Python: '3.9.2 (default, Mar 12 2021, 04:06:34) \n[GCC 10.2.1 20210110]'
Start printer at Wed Jun 14 00:10:51 2023 (1686694251.2 30.0)
===== Config file =====
[virtual_sdcard]
path = ~/printer_data/gcodes
on_error_gcode = CANCEL_PRINT

[pause_resume]

[display_status]

[gcode_macro CANCEL_PRINT]
description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
gcode = 
	
	{% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
	{% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
	{% set allow_park = False if not macro_found
	else False if client.park_at_cancel is not defined
	else True  if client.park_at_cancel|lower == 'true'
	else False %}
	{% set retract = 5.0  if not macro_found else client.cancel_retract|default(5.0)|abs %}
	
	{% set park_x = ""                                    if not macro_found
	else ""                                    if client.park_at_cancel_x is not defined
	else "X=" + client.park_at_cancel_x|string if client.park_at_cancel_x is not none %}
	{% set park_y = ""                                    if not macro_found
	else ""                                    if client.park_at_cancel_y is not defined
	else "Y=" + client.park_at_cancel_y|string if client.park_at_cancel_y is not none %}
	{% set custom_park = True if (park_x|length > 0 or park_y|length > 0) else False %}
	
	{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}
	_CLIENT_RETRACT LENGTH={retract}
	TURN_OFF_HEATERS
	M106 S0
	
	SET_PAUSE_NEXT_LAYER ENABLE=0
	SET_PAUSE_AT_LAYER ENABLE=0 LAYER=0
	CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description = Pause the actual running print
rename_existing = PAUSE_BASE
gcode = 
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{printer[printer.toolhead.extruder].target}"
	
	PAUSE_BASE
	_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}

[gcode_macro RESUME]
description = Resume the actual running print
rename_existing = RESUME_BASE
variable_last_extruder_temp = 0
gcode = 
	
	{% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
	{% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set sp_move        = velocity if not macro_found else client.speed_move|default(velocity) %}
	
	M109 S{last_extruder_temp}
	
	_CLIENT_EXTRUDE
	RESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}

[gcode_macro SET_PAUSE_NEXT_LAYER]
description = Enable a pause if the next layer is reached
gcode = 
	{% set pause_next_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_next_layer %}
	{% set ENABLE = params.ENABLE | default(1) | int != 0 %}
	{% set MACRO = params.MACRO | default(pause_next_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ 'enable': ENABLE, 'call': MACRO }}"

[gcode_macro SET_PAUSE_AT_LAYER]
description = Enable/disable a pause if a given layer number is reached
gcode = 
	{% set pause_at_layer = printer['gcode_macro SET_PRINT_STATS_INFO'].pause_at_layer %}
	{% set ENABLE = params.ENABLE | int != 0 if params.ENABLE is defined
	else params.LAYER is defined %}
	{% set LAYER = params.LAYER | default(pause_at_layer.layer) | int %}
	{% set MACRO = params.MACRO | default(pause_at_layer.call, True) %}
	SET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ 'enable': ENABLE, 'layer': LAYER, 'call': MACRO }}"

[gcode_macro SET_PRINT_STATS_INFO]
rename_existing = SET_PRINT_STATS_INFO_BASE
description = Overwrite, to get pause_next_layer and pause_at_layer feature
variable_pause_next_layer = { 'enable': False, 'call': "PAUSE" }
variable_pause_at_layer = { 'enable': False, 'layer': 0, 'call': "PAUSE" }
gcode = 
	{% if pause_next_layer.enable %}
	{action_respond_info("%s, forced by pause_next_layer" % pause_next_layer.call)}
	{pause_next_layer.call}
	SET_PAUSE_NEXT_LAYER ENABLE=0
	{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}
	{action_respond_info("%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer))}
	{pause_at_layer.call}
	SET_PAUSE_AT_LAYER ENABLE=0
	{% endif %}
	SET_PRINT_STATS_INFO_BASE {rawparams}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
gcode = 
	
	{% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
	{% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
	{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}
	{% set use_custom     = False if not macro_found
	else False if client.use_custom_pos is not defined
	else True  if client.use_custom_pos|lower == 'true'
	else False %}
	{% set custom_park_x  = 0.0 if not macro_found else client.custom_park_x|default(0.0) %}
	{% set custom_park_y  = 0.0 if not macro_found else client.custom_park_y|default(0.0) %}
	{% set park_dz        = 2.0 if not macro_found else client.custom_park_dz|default(2.0)|abs %}
	{% set sp_hop         = 900  if not macro_found else client.speed_hop|default(15) * 60 %}
	{% set sp_move        = velocity * 60 if not macro_found else client.speed_move|default(velocity) * 60 %}
	
	{% set origin    = printer.gcode_move.homing_origin %}
	{% set act       = printer.gcode_move.gcode_position %}
	{% set max       = printer.toolhead.axis_maximum %}
	{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}
	{% set round_bed = True if printer.configfile.settings.printer.kinematics is in ['delta','polar','rotary_delta','winch']
	else False %}
	
	{% set z_min = params.Z_MIN|default(0)|float %}
	{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}
	{% set x_park = params.X       if params.X is defined
	else custom_park_x  if use_custom
	else 0.0            if round_bed
	else (max.x - 5.0) %}
	{% set y_park = params.Y       if params.Y is defined
	else custom_park_y  if use_custom
	else (max.y - 5.0)  if round_bed and z_park < cone
	else 0.0            if round_bed
	else (max.y - 5.0) %}
	
	_CLIENT_RETRACT
	{% if "xyz" in printer.toolhead.homed_axes %}
	G90
	G1 Z{z_park} F{sp_hop}
	G1 X{x_park} Y{y_park} F{sp_move}
	{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro _CLIENT_EXTRUDE]
description = Extrudes, if the extruder is hot enough
gcode = 
	{% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
	{% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
	{% set use_fw_retract = False if not macro_found
	else False if client.use_fw_retract is not defined
	else True  if client.use_fw_retract|lower == 'true' and printer.firmware_retraction is defined
	else False %}
	
	{% set length = (params.LENGTH|float) if params.LENGTH is defined
	else 1.0 if not macro_found
	else client.unretract|default(1.0) %}
	
	{% set speed = params.SPEED if params.SPEED is defined
	else 35 if not macro_found
	else client.speed_unretract|default(35) %}
	
	{% set absolute_extrude = printer.gcode_move.absolute_extrude %}
	
	{% if printer.extruder.can_extrude %}
	{% if use_fw_retract %}
	{% if length < 0 %}
	G10
	{% else %}
	G11
	{% endif %}
	{% else %}
	M83
	G1 E{length} F{(speed|float|abs) * 60}
	{% if absolute_extrude %}
	M82
	{% endif %}
	{% endif %}
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}

[gcode_macro _CLIENT_RETRACT]
description = Retracts, if the extruder is hot enough
gcode = 
	{% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
	{% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
	
	{% set length = (params.LENGTH|float) if params.LENGTH is defined
	else 1.0 if not macro_found
	else client.retract|default(1.0) %}
	
	{% set speed = params.SPEED if params.SPEED is defined
	else 35 if not macro_found
	else client.speed_retract|default(35) %}
	
	_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}

[gcode_macro START_PRINT]
gcode = 
	{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(210)|float %}
	
	
	M104 S{EXTRUDER_TEMP}
	
	M140 S{BED_TEMP}
	
	G90
	
	SET_GCODE_OFFSET Z=0.0
	
	G28
	
	BED_MESH_PROFILE LOAD=default
	
	G1 Z5 F3000
	
	G1 Z0.15 F300
	
	M190 S{BED_TEMP}
	
	M109 S{EXTRUDER_TEMP}

[gcode_macro END_PRINT]
gcode = 
	
	M140 S0
	M104 S0
	M106 S0
	
	G91
	G1 X-2 Y-2 E-3 F300
	
	G1 Z10 F3000
	G90
	
	M84

[stepper_x]
step_pin = PC2
dir_pin = PB9
enable_pin = !PC3
microsteps = 16
rotation_distance = 40
endstop_pin = ^PA5
position_endstop = -4
position_max = 260
position_min = -4
homing_speed = 50

[stepper_y]
step_pin = PB8
dir_pin = PB7
enable_pin = !PC3
microsteps = 16
rotation_distance = 40
endstop_pin = ^PA6
position_endstop = -6
position_max = 224
position_min = -6
homing_speed = 50

[stepper_z]
step_pin = PB6
dir_pin = !PB5
enable_pin = !PC3
microsteps = 16
rotation_distance = 8
endstop_pin = probe:z_virtual_endstop
position_max = 250
position_min = -0.1

[bltouch]
sensor_pin = ^PB1
control_pin = PB0
pin_up_touch_mode_reports_triggered = False
probe_with_touch_mode = True
x_offset = -47
y_offset = -8
z_offset = 2.850

[safe_z_home]
home_xy_position = 117.5,117.5
z_hop = 10
z_hop_speed = 5

[screws_tilt_adjust]
screw1 = 77,38
screw1_name = front left screw
screw2 = 247, 38
screw2_name = front right screw
screw3 = 247, 207
screw3_name = rear right screw
screw4 = 77,207
screw4_name = rear left screw
horizontal_move_z = 10
speed = 50
screw_thread = CW-M4

[bed_mesh]
speed = 120
horizontal_move_z = 5
mesh_min = 10, 15
mesh_max = 213, 216
probe_count = 5,5
algorithm = bicubic
fade_start = 1
fade_end = 10
fade_target = 0

[extruder]
step_pin = PB4
dir_pin = PB3
enable_pin = !PC3
microsteps = 16
rotation_distance = 23.15
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = PA1
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC5
control = pid
pid_kp = 25.883
pid_ki = 1.380
pid_kd = 121.326
min_temp = 0
max_temp = 250

[heater_bed]
heater_pin = PA2
sensor_type = EPCOS 100K B57560G104F
sensor_pin = PC4
control = pid
pid_kp = 68.240
pid_ki = 1.730
pid_kd = 673.022
min_temp = 0
max_temp = 130

[fan]
pin = PA0

[mcu]
serial = /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method = command

[printer]
kinematics = cartesian
max_velocity = 300
max_accel = 3000
max_z_velocity = 5
max_z_accel = 100

[mcu rpi]
serial = /tmp/klipper_host_mcu

[adxl345]
cs_pin = rpi:None

[resonance_tester]
accel_chip = adxl345
probe_points = 
	100, 100, 20

[input_shaper]
shaper_type_y = mzv
shaper_freq_y = 46.2
shaper_type_x = mzv
shaper_freq_x = 59.6

[bed_mesh default]
version = 1
points = 
	-0.282500, -0.285000, -0.232500, -0.262500, -0.190000
	-0.027500, -0.047500, -0.005000, -0.035000, -0.040000
	0.030000, 0.007500, 0.060000, -0.015000, -0.047500
	-0.057500, -0.042500, -0.040000, -0.077500, -0.087500
	-0.235000, -0.270000, -0.215000, -0.235000, -0.185000
x_count = 5
y_count = 5
mesh_x_pps = 2
mesh_y_pps = 2
algo = bicubic
tension = 0.2
min_x = 10.0
max_x = 213.0
min_y = 15.0
max_y = 216.0
=======================
Extruder max_extrude_ratio=0.266081
mcu 'mcu': Starting serial connect
Loaded MCU 'mcu' 105 commands (v0.11.0-169-g83308a10 / gcc: (15:8-2019-q3-1+b1) 8.3.1 20190703 (release) [gcc-8-branch revision 273027] binutils: (2.34-4+rpi1+14) 2.34)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PB8,PB9 BUS_PINS_i2c2=PB10,PB11 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi3=PB4,PB5,PB3 CLOCK_FREQ=72000000 MCU=stm32f103xe PWM_MAX=255 RECEIVE_WINDOW=192 RESERVE_PINS_serial=PA10,PA9 SERIAL_BAUD=250000 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
mcu 'rpi': Starting connect
Loaded MCU 'rpi' 111 commands (v0.11.0-218-gb389c70d / gcc: (Raspbian 10.2.1-6+rpi1) 10.2.1 20210110 binutils: (GNU Binutils for Raspbian) 2.35.2)
MCU 'rpi' config: ADC_MAX=4095 CLOCK_FREQ=50000000 MCU=linux PCA9685_MAX=4096 PWM_MAX=32768 STATS_SUMSQ_BASE=256
Sending MCU 'mcu' printer configuration...
Configured MCU 'mcu' (1024 moves)
Sending MCU 'rpi' printer configuration...
Configured MCU 'rpi' (1024 moves)
webhooks client 1946761632: New connection
bed_mesh: generated points
Index |  Tool Adjusted  |   Probe
  0   | (57.0, 23.0)    | (10.0, 15.0)
  1   | (107.8, 23.0)   | (60.8, 15.0)
  2   | (158.5, 23.0)   | (111.5, 15.0)
  3   | (209.2, 23.0)   | (162.2, 15.0)
  4   | (260.0, 23.0)   | (213.0, 15.0)
  5   | (260.0, 73.2)   | (213.0, 65.2)
  6   | (209.2, 73.2)   | (162.2, 65.2)
  7   | (158.5, 73.2)   | (111.5, 65.2)
  8   | (107.8, 73.2)   | (60.8, 65.2)
  9   | (57.0, 73.2)    | (10.0, 65.2)
  10  | (57.0, 123.5)   | (10.0, 115.5)
  11  | (107.8, 123.5)  | (60.8, 115.5)
  12  | (158.5, 123.5)  | (111.5, 115.5)
  13  | (209.2, 123.5)  | (162.2, 115.5)
  14  | (260.0, 123.5)  | (213.0, 115.5)
  15  | (260.0, 173.8)  | (213.0, 165.8)
  16  | (209.2, 173.8)  | (162.2, 165.8)
  17  | (158.5, 173.8)  | (111.5, 165.8)
  18  | (107.8, 173.8)  | (60.8, 165.8)
  19  | (57.0, 173.8)   | (10.0, 165.8)
  20  | (57.0, 224.0)   | (10.0, 216.0)
  21  | (107.8, 224.0)  | (60.8, 216.0)
  22  | (158.5, 224.0)  | (111.5, 216.0)
  23  | (209.2, 224.0)  | (162.2, 216.0)
  24  | (260.0, 224.0)  | (213.0, 216.0)
Starting heater checks for heater_bed
Starting heater checks for extruder
Stats 34.3: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=1118 bytes_read=4215 bytes_retransmit=9 bytes_invalid=0 send_seq=124 receive_seq=124 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72001018 rpi: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=832 bytes_read=4497 bytes_retransmit=0 bytes_invalid=0 send_seq=113 receive_seq=113 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49998062 adj=49998132  heater_bed: target=0 temp=14.0 pwm=0.000 sysload=1.16 cputime=2.039 memavail=204620 print_time=0.009 buffer_time=0.000 print_stall=0 extruder: target=0 temp=13.8 pwm=0.000
webhooks client 1946761632: Client info {'program': 'Moonraker', 'version': 'v0.8.0-48-gaa0f89c'}
webhooks: registering remote method 'shutdown_machine' for connection id: 1946761632
webhooks: registering remote method 'reboot_machine' for connection id: 1946761632
webhooks: registering remote method 'pause_job_queue' for connection id: 1946761632
webhooks: registering remote method 'start_job_queue' for connection id: 1946761632
Stats 35.3: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=1124 bytes_read=4351 bytes_retransmit=9 bytes_invalid=0 send_seq=125 receive_seq=125 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000886 rpi: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=838 bytes_read=4513 bytes_retransmit=0 bytes_invalid=0 send_seq=114 receive_seq=114 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49998839 adj=49997104  heater_bed: target=0 temp=14.0 pwm=0.000 sysload=1.15 cputime=2.063 memavail=198412 print_time=0.009 buffer_time=0.000 print_stall=0 extruder: target=0 temp=13.9 pwm=0.000
Stats 36.3: gcodein=0  mcu: mcu_awake=0.000 mcu_task_avg=0.000000 mcu_task_stddev=0.000000 bytes_write=1130 bytes_read=4457 bytes_retransmit=9 bytes_invalid=0 send_seq=126 receive_seq=126 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000840 rpi: mcu_awake=0.003 mcu_task_avg=0.000018 mcu_task_stddev=0.000013 bytes_write=844 bytes_read=4543 bytes_retransmit=0 bytes_invalid=0 send_seq=115 receive_seq=115 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999111 adj=49998568  heater_bed: target=0 temp=14.0 pwm=0.000 sysload=1.15 cputime=2.074 memavail=196460 print_time=0.009 buffer_time=0.000 print_stall=0 extruder: target=0 temp=13.9 pwm=0.000
Stats 37.3: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000028 mcu_task_stddev=0.000058 bytes_write=1136 bytes_read=4578 bytes_retransmit=9 bytes_invalid=0 send_seq=127 receive_seq=127 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000840 rpi: mcu_awake=0.003 mcu_task_avg=0.000018 mcu_task_stddev=0.000013 bytes_write=850 bytes_read=4559 bytes_retransmit=0 bytes_invalid=0 send_seq=116 receive_seq=116 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=49999727 adj=49999046  heater_bed: target=0 temp=14.0 pwm=0.000 sysload=1.15 cputime=2.085 memavail=191116 print_time=0.009 buffer_time=0.000 print_stall=0 extruder: target=0 temp=13.9 pwm=0.000
Stats 38.3: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000028 mcu_task_stddev=0.000058 bytes_write=1142 bytes_read=4714 bytes_retransmit=9 bytes_invalid=0 send_seq=128 receive_seq=128 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000918 rpi: mcu_awake=0.003 mcu_task_avg=0.000018 mcu_task_stddev=0.000013 bytes_write=856 bytes_read=4575 bytes_retransmit=0 bytes_invalid=0 send_seq=117 receive_seq=117 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000105 adj=50000196  heater_bed: target=0 temp=14.0 pwm=0.000 sysload=1.15 cputime=2.095 memavail=195708 print_time=0.009 buffer_time=0.000 print_stall=0 extruder: target=0 temp=13.8 pwm=0.000
Stats 39.3: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000028 mcu_task_stddev=0.000058 bytes_write=1148 bytes_read=4820 bytes_retransmit=9 bytes_invalid=0 send_seq=129 receive_seq=129 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000769 rpi: mcu_awake=0.003 mcu_task_avg=0.000018 mcu_task_stddev=0.000013 bytes_write=862 bytes_read=4591 bytes_retransmit=0 bytes_invalid=0 send_seq=118 receive_seq=118 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000450 adj=50000674  heater_bed: target=0 temp=14.0 pwm=0.000 sysload=1.15 cputime=2.104 memavail=200312 print_time=0.009 buffer_time=0.000 print_stall=0 extruder: target=0 temp=13.9 pwm=0.000
Stats 40.3: gcodein=0  mcu: mcu_awake=0.005 mcu_task_avg=0.000028 mcu_task_stddev=0.000058 bytes_write=1154 bytes_read=4926 bytes_retransmit=9 bytes_invalid=0 send_seq=130 receive_seq=130 retransmit_seq=2 srtt=0.003 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=72000826 rpi: mcu_awake=0.003 mcu_task_avg=0.000018 mcu_task_stddev=0.000013 bytes_write=868 bytes_read=4607 bytes_retransmit=0 bytes_invalid=0 send_seq=119 receive_seq=119 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 upcoming_bytes=0 freq=50000047 adj=50001529  heater_bed: target=0 temp=14.1 pwm=0.000 sysload=1.06 cputime=2.113 memavail=196460 print_time=0.009 buffer_time=0.000 print_stall=0 extruder: target=0 temp=13.9 pwm=0.000
